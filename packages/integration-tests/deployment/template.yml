AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Subnets:
    Type: String

  TaskCpu:
    Type: String
    Description: See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  TaskMemory:
    Type: String
    Description: See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  SpamBotImage:
    Type: String

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          -
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ec2:DescribeNetworkInterfaces
            - ecs:DescribeTasks
            - s3:*
            Resource: '*'

  Bot:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 10
      LaunchType: FARGATE
      TaskDefinition: !Ref PerformanceDataTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets: !Split
            - ','
            - !Ref Subnets

  PerformanceDataTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-PerformanceData
      TaskRoleArn: !GetAtt TaskRole.Arn
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      RequiresCompatibilities:
      - FARGATE
      Memory: !Ref TaskMemory
      Cpu: !Ref TaskCpu
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Image: !Ref SpamBotImage
          Essential: true
          Memory: !Ref TaskMemory
          Name: bot
          LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref LogGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: bot

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${AWS::StackName}/bot