--- ./node_modules/@quiet/state-manager/node_modules/@quiet/logger/lib/index.js.backup	2022-08-03 12:51:45.000000000 -0400
+++ ./node_modules/@quiet/state-manager/node_modules/@quiet/logger/lib/index.js	2022-08-03 13:28:03.000000000 -0400
@@ -1,29 +1,9 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.consoleLogger = exports.saveToFileLogger = void 0;
-const debug_1 = __importDefault(require("debug"));
-const path_1 = __importDefault(require("path"));
-const electron_log_1 = __importDefault(require("electron-log"));
-const saveToFileLogger = (packageName) => (module) => {
-    const appInstanceDir = process.env.DATA_DIR || '';
-    electron_log_1.default.transports.file.resolvePath = (variables) => {
-        return path_1.default.join(variables.appData, appInstanceDir, variables.appName, 'logs', variables.fileName);
-    };
-    electron_log_1.default.info('Logs path:', electron_log_1.default.transports.file.getFile().path);
-    Object.assign(console, electron_log_1.default.functions);
-    return Object.assign(electron_log_1.default.scope(`${packageName}:${module}`).log, electron_log_1.default.functions, {});
-};
+const saveToFileLogger = (_packageName) => (_module) => { };
 exports.saveToFileLogger = saveToFileLogger;
-const consoleLogger = (packageName) => (module) => {
-    (0, debug_1.default)('quiet')('Initializing debug logger');
-    const logger = Object.assign((0, debug_1.default)(`${packageName}:${module}`), {
-        error: (0, debug_1.default)(`${packageName}:${module}:err`)
-    });
-    return logger;
-};
+const consoleLogger = (_packageName) => (_module) => { };
 exports.consoleLogger = consoleLogger;
 const logger = (packageName) => {
     if (process.env.DEBUG) {
