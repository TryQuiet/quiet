AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Parameters:
  Subnets:
    Type: String

  TaskCpu:
    Type: String
    Description: See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  TaskMemory:
    Type: String
    Description: See https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-cpu-memory-error.html

  TorTestImage:
    Type: String

Resources:

  ECSCluster:
    Type: AWS::ECS::Cluster

  EventECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          -
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - ecs:RunTask
            Resource:
              - !Ref TorConnectionTestTaskDefinition
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - '*'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          -
            Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      Policies:
      - PolicyName: AmazonECSTaskExecutionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            - ecr:BatchCheckLayerAvailability
            - ecr:GetDownloadUrlForLayer
            - ecr:BatchGetImage
            - logs:CreateLogStream
            - logs:PutLogEvents
            - ec2:DescribeNetworkInterfaces
            - ecs:DescribeTasks
            - s3:*
            Resource: '*'


  RegistrarTestTaskRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule rule for registrar test with default settings"
      Name: !Sub registrar-task-schedule-rule
      State: ENABLED
      ScheduleExpression: cron(0 1,18 * * ? *)
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          Id: ScheduledTask
          RoleArn: !GetAtt EventECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TorConnectionTestTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Split
                  - ','
                  - !Ref Subnets

  RegistrarTestNewnymTaskRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule rule for registrar test with newnym signal"
      Name: !Sub registrar-task-newnym-schedule-rule
      State: ENABLED
      ScheduleExpression: cron(0 1,18 * * ? *)
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          Id: ScheduledTask
          Input: !Sub '{ "containerOverrides": [{"name": "tor-connection-test", "environment": [{"name":"TOR_TEST_MODE","value":"newnym"}]}]}'
          RoleArn: !GetAtt EventECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TorConnectionTestTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Split
                  - ','
                  - !Ref Subnets

  RegistrarTestVanguardOffTaskRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule rule for registrar test without vanguards"
      Name: !Sub registrar-task-vanguard-off-schedule-rule
      State: ENABLED
      ScheduleExpression: cron(0 1,18 * * ? *)
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          Id: ScheduledTask
          Input: !Sub '{ "containerOverrides": [{"name": "tor-connection-test", "environment": [{"name":"VANGUARDS_ENABLED","value":0}]}]}'
          RoleArn: !GetAtt EventECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TorConnectionTestTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Split
                  - ','
                  - !Ref Subnets

  RegistrarTestNumEntryGuards3TaskRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule rule for registrar test with NumEntryGuards set to 3"
      Name: !Sub registrar-task-entry-guard-3-schedule-rule
      State: ENABLED
      ScheduleExpression: cron(0 1,18 * * ? *)
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          Id: ScheduledTask
          Input: !Sub '{ "containerOverrides": [{"name": "tor-connection-test", "environment": [{"name":"NUM_ENTRY_GUARDS","value":3}]}]}'
          RoleArn: !GetAtt EventECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TorConnectionTestTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Split
                  - ','
                  - !Ref Subnets

  RegistrarTestVanguardOffEntryGuards3TaskRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Schedule rule for registrar test without vanguards and NumEntryGuards set to 3"
      Name: !Sub registrar-task-vanguard-off-entry-guard-3-schedule-rule
      State: ENABLED
      ScheduleExpression: cron(0 1,18 * * ? *)
      Targets:
        - Arn: !GetAtt ECSCluster.Arn
          Id: ScheduledTask
          Input: !Sub '{ "containerOverrides": [{"name": "tor-connection-test", "environment": [{"name":"VANGUARDS_ENABLED","value":0}, {"name":"NUM_ENTRY_GUARDS","value":3}]}]}'
          RoleArn: !GetAtt EventECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref TorConnectionTestTaskDefinition
            LaunchType: FARGATE
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: ENABLED
                Subnets: !Split
                  - ','
                  - !Ref Subnets

  TorConnectionTestTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-PerformanceData
      TaskRoleArn: !GetAtt TaskRole.Arn
      ExecutionRoleArn: !GetAtt TaskRole.Arn
      RequiresCompatibilities:
      - FARGATE
      Memory: !Ref TaskMemory
      Cpu: !Ref TaskCpu
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Image: !Ref TorTestImage
          Essential: true
          Memory: !Ref TaskMemory
          Name: tor-connection-test
          LogConfiguration:
              LogDriver: awslogs
              Options:
                awslogs-group: !Ref LogGroup
                awslogs-region: !Ref AWS::Region
                awslogs-stream-prefix: tor-connection-test

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub ${AWS::StackName}/tor-connection-test
