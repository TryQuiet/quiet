name: Deploy Android to Google Play

on:
  release:
    types:
      [prereleased, released]

jobs:
  build-android:
    # needs: detox-android
    runs-on: ${{ matrix.os }}
    if: |
      startsWith(github.ref, 'refs/tags/@quiet/mobile')

    strategy:
      matrix:
        os: [ubuntu-latest-m]

    steps:
      - name: "Print OS"
        run: echo ${{ matrix.os }}

      - uses: actions/checkout@v4

      - name: "Set up JDK"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: "Set up NDK"
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b
          add-to-path: false

      - name: "Install Bundletool"
        run: |
          wget https://github.com/google/bundletool/releases/download/1.15.6/bundletool-all-1.15.6.jar -O /usr/local/bin/bundletool.jar

      - name: "Setup environment"
        uses: ./.github/actions/setup-env
        with:
          bootstrap-packages: "@quiet/eslint-config,@quiet/logger,@quiet/common,@quiet/types,@quiet/state-manager,@quiet/backend,@quiet/identity,@quiet/mobile,backend-bundle"

      - name: "Create gradle configuration directory"
        run: mkdir -p $HOME/.gradle

      - name: "Prepare ndk configuration"
        run: |
          printf "\
          NDK_PATH=${{ steps.setup-ndk.outputs.ndk-path }}\n\
          " > $HOME/.gradle/gradle.properties

      - name: "Prepare signing configuration"
        run: |
          printf "\
          STORE_FILE=quietmobile.keystore\n\
          STORE_PASSWORD=${{ SECRETS.GOOGLE_KEYSTORE_PASSWORD }}\n\
          KEY_ALIAS=${{ SECRETS.GOOGLE_KEYSTORE_ALIAS }}\n\
          KEY_PASSWORD=${{ SECRETS.GOOGLE_KEYSTORE_PASSWORD }}\
          " >> $HOME/.gradle/gradle.properties

      - name: "Decode keystore"
        run: echo ${{ SECRETS.GOOGLE_KEYSTORE }} | base64 --decode > ./packages/mobile/android/app/quietmobile.keystore

      - name: "Build .aab"
        run: cd ./packages/mobile/android && ENVFILE=../.env.production ./gradlew bundleStandardRelease

      - name: "Upload .abb to artifacts"
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: app-standard-release.aab
          path: ./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.aab
          retention-days: 5

      - name: "Build .apks"
        run: |
          java -jar /usr/local/bin/bundletool.jar build-apks \
            --bundle=./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.aab \
            --output=./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.apks \
            --ks=./packages/mobile/android/app/quietmobile.keystore \
            --ks-pass=pass:${{ SECRETS.GOOGLE_KEYSTORE_PASSWORD }} \
            --ks-key-alias=${{ SECRETS.GOOGLE_KEYSTORE_ALIAS }}

      - name: "Upload .apks to artifacts"
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: app-standard-release.apks
          path: ./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.apks

      - name: "Get release"
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Upload release assets"
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.apks
          asset_name: app-standard-release.apks
          asset_content_type: application/.apks

      - name: "Configure Google Play upload"
        run: |
          mkdir -p distribution/whatsnew
          git log -1 --pretty=format:%s > distribution/whatsnew/whatsnew-pl-PL
          echo ${{ SECRETS.SERVICE_ACCOUNT_JSON }} | base64 --decode > google-play.json

      - name: "Upload to Google Play"
        uses: r0adkll/upload-google-play@v1.1.2
        with:
          serviceAccountJson: google-play.json
          packageName: com.quietmobile
          releaseFiles: ./packages/mobile/android/app/build/outputs/bundle/standardRelease/app-standard-release.aab
          status: completed
          track: internal
          whatsNewDirectory: distribution/whatsnew
