name: Build Android Package Kit

on:
  release:
    types:
      [prereleased, released]

jobs:
  build-android-package-kit:
    # needs: detox-android
    runs-on: ${{ matrix.os }}
    if: |
      startsWith(github.ref, 'refs/tags/@quiet/mobile')

    strategy:
      matrix:
        os: [ubuntu-latest-m]

    steps:
      - name: "Print OS"
        run: echo ${{ matrix.os }}

      - uses: actions/checkout@v4

      - name: "Set up JDK"
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: "Set up NDK"
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25b
          add-to-path: false

      - name: "Setup environment"
        uses: ./.github/actions/setup-env
        with:
          bootstrap-packages: "@quiet/eslint-config,@quiet/logger,@quiet/common,@quiet/types,@quiet/state-manager,@quiet/backend,@quiet/identity,@quiet/mobile,backend-bundle"

      - name: "Create gradle configuration directory"
        run: mkdir -p $HOME/.gradle

      - name: "Prepare ndk configuration"
        run: |
          printf "\
          NDK_PATH=${{ steps.setup-ndk.outputs.ndk-path }}\n\
          " > $HOME/.gradle/gradle.properties

      - name: "Prepare signing configuration"
        run: |
          printf "\
          STORE_FILE=quietmobile.keystore\n\
          STORE_PASSWORD=${{ SECRETS.GOOGLE_KEYSTORE_PASSWORD }}\n\
          KEY_ALIAS=${{ SECRETS.GOOGLE_KEYSTORE_ALIAS }}\n\
          KEY_PASSWORD=${{ SECRETS.GOOGLE_KEYSTORE_PASSWORD }}\
          " >> $HOME/.gradle/gradle.properties

      - name: "Decode keystore"
        run: echo ${{ SECRETS.GOOGLE_KEYSTORE }} | base64 --decode > ./packages/mobile/android/app/quietmobile.keystore

      - name: "Build .apk"
        run: cd ./packages/mobile/android && ENVFILE=../.env.production ./gradlew assembleStandardRelease

      - name: "Upload .apk to artifacts"
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: app-standard-release.apk
          path: ./packages/mobile/android/app/build/outputs/apk/standardRelease/app-standard-release.apk

      - name: "Get release"
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: "Upload release assets"
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./packages/mobile/android/app/build/outputs/apk/standardRelease/app-standard-release.apk
          asset_name: app-standard-release.apk
          asset_content_type: application/.apk
