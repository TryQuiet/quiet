name: 'Setup environment'

inputs:
  bootstrap-packages:
    description: 'Lerna bootstrap packages (comma separated without spaces)'
    required: false
  cachePrefix:
    description: 'For correct caching'
    required: false
    default: 'prefix'

timeout-minutes: 30

runs:

  using: "composite"
  steps:
    - uses: actions/setup-node@master
      with:
        node-version: 18.12.1

    - name: Print OS name
      run: echo ${{ runner.os }}
      shell: bash

    # https://stackoverflow.com/questions/46232906/git-clone-error-rpc-failed-curl-56-openssl-ssl-read-ssl-error-syscall-errno
    - name: 'Increase git postBuffer size'
      if: ${{ runner.os == 'Windows' }}
      run: git config --global http.postBuffer 524288000
      shell: bash

    - name: "Set unsafe-perm"
      run: npm set unsafe-perm true
      shell: bash

    - name: "Install lerna and typescript globally"
      run: npm i -g lerna@7.3.0 typescript@4.9.3
      shell: bash

    # - name: "Cache NPM dependencies"
    #   id: cache-nodemodules
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       node_modules
    #       */*/node_modules
    #     key: ${{ inputs.cachePrefix }}-${{ runner.OS }}-npm-cache-${{ hashFiles('packages/*/package-lock.json') }}
    #     restore-keys: |
    #      ${{ inputs.cachePrefix }}-${{ runner.OS }}-npm-cache-

    - name: "Install monorepo dependencies"
      # if: steps.cache-nodemodules.outputs.cache-hit != 'true'
      run: npm i
      shell: bash

    # - name: "Bootstrap project"
    #   if: ${{ runner.os != 'Windows' }}
    #   run: |
    #     if [[ ! -z "${{ inputs.bootstrap-packages }}" ]]
    #     then
    #         lerna bootstrap --scope '{${{ inputs.bootstrap-packages }},}'
    #     else
    #         lerna bootstrap
    #     fi
    #   shell: bash

    # - name: "Bootstrap project on windows"
    #   if: ${{ runner.os == 'Windows' }}
    #   run: |
    #     if ( "${{ inputs.bootstrap-packages }}" ) {
    #       lerna bootstrap --scope '{${{ inputs.bootstrap-packages }},}'
    #     } else {
    #       lerna bootstrap
    #     }
    #   shell: powershell
